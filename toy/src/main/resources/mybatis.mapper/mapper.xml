<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.toy.mapper.Mappers">

    <!-- insert 데이터 삽입 -->
    <insert id="insert2" parameterType="com.example.toy.model.Business">
        <selectKey order="BEFORE" keyProperty="IMG_KEY" resultType="String">
            SELECT
            substr(to_number(to_char(sysdate,'MMDDHHMISS'))||'CO'|| to_number(max(substr(img_key, 12))+10), 1, 15)
            FROM BUSINESS_INFO_1
        </selectKey>
        INSERT INTO BUSINESS_INFO_1(IMG_KEY, CUST_NM, RRN_NO, REGIST_USER_ID, UPDATE_USER_ID)
        VALUES (#{IMG_KEY}, #{CUST_NM}, #{RRN_NO}, #{REGIST_USER_ID}, #{UPDATE_USER_ID})
    </insert>

    <insert id="insert3" parameterType="com.example.toy.model.Business2" >
        <selectKey order="BEFORE" keyProperty="IMG_KEY" resultType="String">
            SELECT
            substr(to_number(to_char(sysdate,'MMDDHHMISS'))||'DP'|| to_number(max(substr(img_key, 12))+10), 1, 15)
            FROM BUSINESS_INFO_2
        </selectKey>
        INSERT INTO BUSINESS_INFO_2(IMG_KEY, CUST_NM, RRN_NO, REGIST_USER_ID, UPDATE_USER_ID)
        VALUES (#{IMG_KEY}, #{CUST_NM}, #{RRN_NO}, #{REGIST_USER_ID}, #{UPDATE_USER_ID})
    </insert>

    <insert id="insert4" parameterType="com.example.toy.model.Business3" >
        <selectKey order="BEFORE" keyProperty="IMG_KEY" resultType="String">
            SELECT
            substr(to_number(to_char(sysdate,'MMDDHHMISS'))||'LN'|| to_number(max(substr(img_key, 12))+10), 1, 15)
            FROM BUSINESS_INFO_3
        </selectKey>
        INSERT INTO BUSINESS_INFO_3(IMG_KEY, CUST_NM, RRN_NO, REGIST_USER_ID, UPDATE_USER_ID)
        VALUES (#{IMG_KEY}, #{CUST_NM}, #{RRN_NO}, #{REGIST_USER_ID}, #{UPDATE_USER_ID})
    </insert>

    <insert id="insert" parameterType="com.example.toy.model.Information">
        INSERT INTO INTEGRATION_INFO(ELEMENTID, IMG_KEY, FILE_EXT, FILE_NM, DOC_CD, MAIN_CATEGORY, REGIST_USER_ID, UPDATE_USER_ID, RETENTION_PERIOD)
        VALUES (#{ELEMENTID}, #{IMG_KEY}, #{FILE_EXT}, #{FILE_NM}, #{DOC_CD}, #{MAIN_CATEGORY}, #{REGIST_USER_ID}, #{UPDATE_USER_ID}, SYSDATE+${RETENTION_PERIOD})
    </insert>

    <insert id="saveUser" parameterType="com.example.toy.model.Employee">
        INSERT INTO EMPLOYEE_INFO
        (EMPLOYEE_NO, EMPLOYEE_PW, ORGANIZATION, EM_NAME, UPDATE_USER_ID, REGIST_USER_ID)
        VALUES (#{EMPLOYEE_NO}, #{EMPLOYEE_PW}, #{ORGANIZATION}, #{EM_NAME}, #{REGIST_USER_ID}, #{UPDATE_USER_ID})
    </insert>


    <!--    <select id="findAll" parameterType="com.example.toy.mapper.SearchDTO" resultType="com.example.toy.model.Business">-->
<!--        SELECT *-->
<!--        FROM-->
<!--        BUSINESS_INFO_1-->
<!--        <if test="searchType == 'C'.toString()">-->
<!--            WHERE IMG_KEY LIKE '%'||#{keyword}||'%' AND DEL_YN = 'N'-->
<!--        </if>-->
<!--    </select>-->


    <!-- 업무 테이블(공통) 페이징 포함 검색 -->
    <select id="findAll" parameterType="com.example.toy.model.Criteria" resultMap="Information">
        SELECT * FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY X.IMG_KEY) NUM, X.* FROM (SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'
        ) X

        <if test="searchType == 'C'.toString()">
            WHERE X.IMG_KEY LIKE '%'||#{keyword}||'%' AND X.CUST_NM LIKE '%'||#{keyword2}||'%' AND RNUM = 1 ORDER BY IMG_KEY ASC
        </if>
        )

        WHERE NUM BETWEEN #{skip} AND #{amount}
    </select>

    <!-- 업무 테이블(수신) 페이징 포함 검색 -->
    <select id="findAll2" parameterType="com.example.toy.model.Criteria" resultMap="Information">
        SELECT * FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY X.IMG_KEY) NUM, X.* FROM (SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_2 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'
        ) X

        <if test="searchType == 'T'.toString()">
            WHERE X.IMG_KEY LIKE '%'||#{keyword}||'%' AND X.CUST_NM LIKE '%'||#{keyword2}||'%' AND RNUM = 1 ORDER BY IMG_KEY ASC
        </if>
        )

        WHERE NUM BETWEEN #{skip} AND #{amount}
    </select>

    <!-- 업무 테이블(여신) 페이징 포함 검색 -->
    <select id="findAll3" parameterType="com.example.toy.model.Criteria" resultMap="Information">
        SELECT * FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY X.IMG_KEY) NUM, X.* FROM (SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_3 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'
        ) X

        <if test="searchType == 'F'.toString()">
            WHERE X.IMG_KEY LIKE '%'||#{keyword}||'%' AND X.CUST_NM LIKE '%'||#{keyword2}||'%' AND RNUM = 1 ORDER BY IMG_KEY ASC
        </if>
        )

        WHERE NUM BETWEEN #{skip} AND #{amount}
    </select>


    <select id="findAll12" resultMap="Information">
        SELECT a.ELEMENTID, b.RETENTION_PERIOD
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY

        union

        SELECT a.ELEMENTID, b.RETENTION_PERIOD
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_2 b
        ON a.IMG_KEY = b.IMG_KEY

        union

        SELECT a.ELEMENTID, b.RETENTION_PERIOD
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_3 b
        ON a.IMG_KEY = b.IMG_KEY
    </select>

    <!-- 업무 테이블(전체) 페이징 포함 검색 -->
    <select id="findAll4" parameterType="com.example.toy.model.Criteria" resultMap="Information">
        SELECT * FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY X.IMG_KEY) NUM, X.* FROM (SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'

        union

        SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_2 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'

        union

        SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_3 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'
        ) X

        <if test="searchType == 'A'.toString()">
            WHERE X.IMG_KEY LIKE '%'||#{keyword}||'%' AND X.CUST_NM LIKE '%'||#{keyword2}||'%' AND RNUM = 1 ORDER BY IMG_KEY ASC
        </if>
        )

        WHERE NUM BETWEEN #{skip} AND #{amount}

    </select>

    <!-- <등록> 통합 테이블 데이터 등록을 위해 대분류와 소분류를 통한 문서코드 찾기 -->
    <select id="findAll10"  resultType="com.example.toy.model.Category" parameterType="com.example.toy.model.Num">
        SELECT DOC_CD, MAIN_CATEGORY, DETAIL_CATEGORY, RETENTION_PERIOD
        FROM CATEGORY_INFO
        WHERE MAIN_CATEGORY = #{MAIN_CATEGORY} AND DETAIL_CATEGORY = #{DETAIL_CATEGORY}

    </select>

    <!-- <조회> 상세 조회 테이블 리스트 -->
    <select id="findById_7" resultMap="Information">
        SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE a.IMG_KEY = #{IMG_KEY} AND c.DETAIL_CATEGORY = #{DETAIL_CATEGORY}

        union

        SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_2 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE a.IMG_KEY = #{IMG_KEY} AND c.DETAIL_CATEGORY = #{DETAIL_CATEGORY}

        union

        SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_3 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE a.IMG_KEY = #{IMG_KEY} AND c.DETAIL_CATEGORY = #{DETAIL_CATEGORY}

    </select>

    <!-- <조회> 확장자 종류에 따라 조회 선택 -->
    <select id="findAll11" resultType="com.example.toy.model.Information">
        SELECT ELEMENTID, FILE_EXT
        FROM INTEGRATION_INFO
        WHERE ELEMENTID = #{ELEMENTID}
    </select>

    <!-- <상세> 조건에 따른 데이터 상세 리스트 조회 -->
    <select id="findById_4" resultMap="Information">

        SELECT a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY, c.MEDIUM_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE a.ELEMENTID = #{ELEMENTID}

        union

        SELECT a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY, c.MEDIUM_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_2 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE a.ELEMENTID = #{ELEMENTID}

        union

        SELECT a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY, c.MEDIUM_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_3 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE a.ELEMENTID = #{ELEMENTID}

    </select>

    <!-- <등록> 업무 테이블의 고객명, 주민번호를 이용하여 PK 가져오기 -->
    <select id="findById_6" resultType="com.example.toy.model.Business" parameterType="com.example.toy.model.Business4">

        SELECT IMG_KEY
        FROM ${VALUE}
        WHERE CUST_NM = #{CUST_NM} AND RRN_NO = #{RRN_NO}

    </select>

    <!-- <삭제> 공용 체크박스를 통해 DEL_YN을 Y로 업데이트 -->
    <update id="deleteById" parameterType="com.example.toy.model.Business">
        UPDATE BUSINESS_INFO_1
        SET DEL_YN = 'Y'
        WHERE IMG_KEY = #{IMG_KEY}
    </update>

    <!-- <삭제> 수신 체크박스를 통해 DEL_YN을 Y로 업데이트 -->
    <update id="deleteById2" parameterType="com.example.toy.model.Business2">
        UPDATE BUSINESS_INFO_2
        SET DEL_YN = 'Y'
        WHERE IMG_KEY = #{IMG_KEY}
    </update>

    <!-- <삭제> 여신 체크박스를 통해 DEL_YN을 Y로 업데이트 -->
    <update id="deleteById3" parameterType="com.example.toy.model.Business3">
        UPDATE BUSINESS_INFO_3
        SET DEL_YN = 'Y'
        WHERE IMG_KEY = #{IMG_KEY}
    </update>

    <!-- <페이징> 검색 조건에 해당하는 데이터 개수 -->
    <select id="authorGetTotal" resultType="int">
        SELECT
        count(*)
        FROM
        INTEGRATION_INFO a
        LEFT JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY
        LEFT JOIN BUSINESS_INFO_2 c
        ON a.IMG_KEY = c.IMG_KEY
        LEFT JOIN BUSINESS_INFO_3 d
        ON a.IMG_KEY = d.IMG_KEY

            <choose>
                <when test="searchType == 'C'.toString()">
                    WHERE a.IMG_KEY LIKE '%'||#{keyword}||'%' AND b.CUST_NM LIKE '%'||#{keyword2}||'%'
                </when>
                <when test="searchType == 'T'.toString()">
                    WHERE a.IMG_KEY LIKE '%'||#{keyword}||'%' AND c.CUST_NM LIKE '%'||#{keyword2}||'%'
                </when>
                <when test="searchType == 'F'.toString()">
                    WHERE a.IMG_KEY LIKE '%'||#{keyword}||'%' AND d.CUST_NM LIKE '%'||#{keyword2}||'%'
                </when>
                <when test="searchType == 'A'.toString()">
                    WHERE a.IMG_KEY LIKE '%'||#{keyword}||'%' AND b.CUST_NM LIKE '%'||#{keyword2}||'%' OR
                    a.IMG_KEY LIKE '%'||#{keyword}||'%' AND c.CUST_NM LIKE '%'||#{keyword2}||'%' OR
                    a.IMG_KEY LIKE '%'||#{keyword}||'%' AND d.CUST_NM LIKE '%'||#{keyword2}||'%'
                </when>
            </choose>
    </select>

    <!-- resultMap 으로 사용 -->
    <resultMap id="Information" type="com.example.toy.model.Information">
        <result property="ELEMENTID" column="ELEMENTID" />
        <result property="IMG_KEY" column="img_key" />
        <result property="MAIN_CATEGORY" column="main_category" />
        <result property="DOC_CD" column="doc_cd" />
        <result property="FILE_NM" column="file_nm" />
        <result property="RNUM" column="RNUM" />
        <result property="REGIST_USER_ID" column="regist_user_id" />
        <result property="UPDATE_USER_ID" column="m_update_user_id" />
        <result property="REGIST_DATE" column="m_regist_date" />
        <result property="UPDATE_DATE" column="m_update_date" />

        <association property="business" javaType="com.example.toy.model.Business">
            <!--    <resultMap id="Business" type="com.example.toy.model.Business" >-->
            <result property="IMG_KEY" column="IMG_KEY" />
            <result property="CUST_NM" column="cust_nm" />
            <result property="RRN_NO" column="rrn_no" />
            <result property="RETENTION_PERIOD" column="RETENTION_PERIOD" />
            <result property="REGIST_USER_ID" column="b_regist_user_id" />
            <result property="UPDATE_USER_ID" column="b_update_user_id" />
            <result property="REGIST_DATE" column="b_regist_date" />
            <result property="UPDATE_DATE" column="b_update_date" />
        </association>

        <association property="business2" javaType="com.example.toy.model.Business2">
            <result property="IMG_KEY" column="IMG_KEY" />
            <result property="CUST_NM" column="cust_nm" />
            <result property="RRN_NO" column="rrn_no" />
            <result property="REGIST_USER_ID" column="b_regist_user_id" />
            <result property="UPDATE_USER_ID" column="b_update_user_id" />
            <result property="REGIST_DATE" column="b_regist_date" />
            <result property="UPDATE_DATE" column="b_update_date" />
        </association>

        <association property="business3" javaType="com.example.toy.model.Business3">
            <result property="IMG_KEY" column="IMG_KEY" />
            <result property="CUST_NM" column="cust_nm" />
            <result property="RRN_NO" column="rrn_no" />
            <result property="REGIST_USER_ID" column="b_regist_user_id" />
            <result property="UPDATE_USER_ID" column="b_update_user_id" />
            <result property="REGIST_DATE" column="b_regist_date" />
            <result property="UPDATE_DATE" column="b_update_date" />
        </association>

        <collection property="category" javaType="com.example.toy.model.Category">
            <result property="DOC_CD" column="doc_cd" />
            <result property="MAIN_CATEGORY" column="main_category" />
            <result property="MEDIUM_CATEGORY" column="medium_category" />
            <result property="MEDIUM_CD" column="medium_cd" />
            <result property="DETAIL_CATEGORY" column="detail_category" />
        </collection>
    </resultMap>


    <select id="getImp" resultMap="Information" parameterType="com.example.toy.model.Business4">
        SELECT a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN ${VALUE} b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N' AND CUST_NM = #{CUST_NM} AND b.RRN_NO = #{RRN_NO} AND c.DETAIL_CATEGORY = #{DETAIL_CATEGORY}
    </select>

    <!-- <페이징> 페이징 처리 리스트 -->
    <select id="authorGetList" parameterType="com.example.toy.model.Criteria" resultMap="Information">
        SELECT * FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY X.IMG_KEY) NUM, X.* FROM (SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'

        union

        SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_2 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'

        union

        SELECT ROW_NUMBER() OVER(PARTITION BY c.DETAIL_CATEGORY, a.IMG_KEY ORDER BY c.DETAIL_CATEGORY DESC) RNUM,
        a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_3 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N'
        )X WHERE RNUM = 1 ORDER BY IMG_KEY ASC)
        WHERE NUM BETWEEN #{skip} AND #{amount}
    </select>

    <!-- 전체 리스트 -->
    <select id="getTotal" resultMap="Information">
        SELECT a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_1 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N' AND
        b.IMG_KEY = #{IMG_KEY}

        union

        SELECT a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_2 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N' AND
        b.IMG_KEY = #{IMG_KEY}

        union

        SELECT a.ELEMENTID, a.IMG_KEY, a.MAIN_CATEGORY, a.DOC_CD, a.FILE_NM, a.REGIST_USER_ID, b.CUST_NM, b.RRN_NO, c.DETAIL_CATEGORY
        FROM INTEGRATION_INFO a
        INNER JOIN BUSINESS_INFO_3 b
        ON a.IMG_KEY = b.IMG_KEY
        INNER JOIN CATEGORY_INFO c
        ON a.DOC_CD = c.DOC_CD
        WHERE b.DEL_YN = 'N' AND
        b.IMG_KEY = #{IMG_KEY}

    </select>

    <!-- 회원가입 -->

    <!-- User 테이블 가져오기 -->


    <select id="getUserList" resultType="com.example.toy.model.Employee">
        SELECT *
        FROM EMPLOYEE_INFO
    </select>

    <select id="getDeleteList" resultType="com.example.toy.model.Information">
        SELECT *
        FROM INTEGRATION_INFO
    </select>

    <select id="getDeleteSelect" resultType="com.example.toy.model.Business">
        SELECT *
        FROM BUSINESS_INFO_1
        WHERE IMG_KEY = #{IMG_KEY}
        union
        SELECT *
        FROM BUSINESS_INFO_2
        WHERE IMG_KEY = #{IMG_KEY}
        union
        SELECT *
        FROM BUSINESS_INFO_3
        WHERE IMG_KEY = #{IMG_KEY}
    </select>

    <update id="UpdateById" parameterType="com.example.toy.model.Business">
        UPDATE BUSINESS_INFO_1
        SET DEL_YN = 'Y'
        WHERE IMG_KEY = #{IMG_KEY}
    </update>


    <!-- 회원가입 -->
<!--    <insert id="insertUser">-->
<!--        INSERT INTO -->
<!--        (name, username, email, password, address, phone, website, company)-->
<!--        VALUES-->
<!--        (#{name}, #{username}, #{email}, #{password}, #{address}, #{phone}, #{website}, #{company})-->
<!--    </insert>-->


    <select id="getUserByEmail" resultType="com.example.toy.model.Employee">
        SELECT EMPLOYEE_NO
        FROM EMPLOYEE_INFO
        WHERE EMPLOYEE_NO = #{EMPLOYEE_NO}
    </select>

    <select id="getUserById" resultType="com.example.toy.model.Employee">
        SELECT *
        FROM EMPLOYEE_INFO
        WHERE EMPLOYEE_NO = #{EMPLOYEE_NO}
    </select>


    <!-- 회원정보 수정 -->
<!--    <update id="updateUser">-->
<!--        UPDATE User-->
<!--        SET name = #{name},-->
<!--        username = #{username},-->
<!--        email = #{email},-->
<!--        password = #{password},-->
<!--        address = #{address},-->
<!--        phone = #{phone},-->
<!--        website = #{website},-->
<!--        company = #{company}-->
<!--        WHERE id = #{id}-->
<!--    </update>-->

    <!-- 탈퇴 -->
    <delete id="deleteUser">
        DELETE
        FROM EMPLOYEE_INFO
        WHERE EMPLOYEE_NO = #{EMPLOYEE_NO}
    </delete>


</mapper>

